const { PrismaClient } = require('@prisma/client')
const prisma = new PrismaClient()

async function verifyMariaDeleted() {
  try {
    console.log('üîç Verificando si Mar√≠a Garc√≠a L√≥pez fue eliminada...\n')
    
    // Buscar la invitaci√≥n de Mar√≠a
    const maria = await prisma.invitation.findFirst({
      where: { clientEmail: 'maria@techstartup.com' }
    })
    
    if (!maria) {
      console.log('‚úÖ ¬°√âXITO! Mar√≠a Garc√≠a L√≥pez fue eliminada correctamente')
      console.log('   - La invitaci√≥n ya no existe en la base de datos')
      console.log('   - El email maria@techstartup.com est√° disponible')
      console.log('   - El slug tech-startup-maria est√° disponible\n')
    } else {
      console.log('‚ùå Mar√≠a todav√≠a existe:')
      console.log(`   - ID: ${maria.id}`)
      console.log(`   - Status: ${maria.status}`)
    }
    
    // Mostrar todas las invitaciones restantes
    const allInvitations = await prisma.invitation.findMany({
      select: {
        id: true,
        clientName: true,
        clientEmail: true,
        status: true
      }
    })
    
    console.log(`üìã Invitaciones restantes: ${allInvitations.length}`)
    allInvitations.forEach((inv, index) => {
      console.log(`${index + 1}. ${inv.clientName} (${inv.clientEmail}) - ${inv.status}`)
    })
    
  } catch (error) {
    console.error('‚ùå Error:', error)
  } finally {
    await prisma.$disconnect()
  }
}

verifyMariaDeleted()
